---
- name: Install programs on Fedora
  hosts: localhost
  vars:
    tmp_folder: /tmp/ansible_temp
  tasks:

  - name: Create temp download folder
    become: yes
    shell: |
       mkdir -p {{ tmp_folder }}

  - name: Adding RPM Fusion GPG keys
    become: yes
    rpm_key:
        state: present
        key: "{{ item }}"    
    with_items:
         - https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020
         - https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020

  - name: Adding RPM Fusion repositories
    become: yes
    dnf:
       state: present
       name: "{{ item }}"
    with_items:
       - http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm
       - http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ansible_distribution_major_version}}.noarch.rpm

  - name: Adding Google Chrome repository into repo.d list
    become: yes
    yum_repository:
        name: google-chrome
        description: google-chrome repository
        baseurl: http://dl.google.com/linux/chrome/rpm/stable/x86_64
        enabled: true
        gpgcheck: true
        gpgkey: https://dl.google.com/linux/linux_signing_key.pub

  - name: Adding Microsoft VSCode repository into repo.d list
    become: yes
    yum_repository:
        name: vscode
        description: vscode repository
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        enabled: true
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        
  - name: Adding Notion Repackged repository into repo.d list
    become: yes
    yum_repository:
        name: notion-repackged
        description: notion repackaged repository
        baseurl: https://yum.fury.io/notion-repackaged/
        enabled: true
        gpgcheck: false
        
  - name: Enable FSEARCH COPR
    become: yes
    community.general.copr:
        host: copr.fedorainfracloud.org
        state: enabled
        name: cboxdoerfer/fsearch

  
  - name: Updating YUM packages
    become: yes
    dnf:
       name: "*"
       state: latest
  
  - name: Install commom programs
    become: yes
    dnf:
      name: "{{ item }}"
      state: present
    with_items:
      - flatpak
      - vim
      - code
      - curl
      - wget
      - flameshot
      - yakuake
      - onedrive
      - firefox
      - qbittorrent
      - gwe #Gree with Envy - Nvidia Tweaks
      - google-chrome-stable
      - notion-app-enhanced
      - fsearch

  - name: Download AppImageLaucher
    become: yes
    shell: |
        wget https://api.github.com/repos/TheAssassin/AppImageLauncher/releases/latest -O - | awk -F \" -v RS="," '/browser_download_url.*\.rpm/ && !/i386/ && !/armhf/ {print $(NF-1)}' | xargs wget
        find . -name "*.rpm" -exec mv {} ./appimagelauncher.rpm \;
    args:
        chdir: "{{ tmp_folder }}"

  - name: Install AppImageLauncher
    become: yes
    dnf:
        name: "{{ tmp_folder }}/appimagelauncher.rpm"
        state: present
        disable_gpg_check: true

  - name: Removing AppImageLauncher package
    become: yes
    file:
        state: absent
        path: "{{ tmp_folder }}/appimagelauncher.rpm"

  - name: Add flathub repository
    become: yes
    command: flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

  - name: Upgrade all flatpaks
    become: yes
    command: flatpak update --noninteractive
    register: flatpak_update_output
    changed_when: "'app/' in flatpak_update_output.stdout"
      
  - name: Install flatpak programs
    become: yes
    flatpak:
      name: "{{ item }}"
      remote: flathub
      state: present
    with_items:
      - com.meetfranz.Franz
      - com.notepadqq.Notepadqq
      - io.github.peazip.PeaZip
      - io.dbeaver.DBeaverCommunity
      - dev.aunetx.deezer
      - com.github.debauchee.barrier
      - 

  - name: Download AWS CLI
    become: yes
    get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: "{{ tmp_folder }}/awscliv2.zip"
    tags:
      - download

  - name: Unzip AWS CLI
    become: yes
    unarchive:
        src: "{{ tmp_folder }}/awscliv2.zip"
        dest: "{{ tmp_folder }}"
        remote_src: yes

  - name: Installing AWS CLI
    become: yes
    shell: sudo ./aws/install
    register: ret
    args:
        chdir: "{{ tmp_folder }}"
    failed_when: ret.rc != 0 and ret.rc != 1
    

  - name: Delete AWS CLI Package
    become: yes
    file:
        state: absent
        path: "{{ tmp_folder }}/awscliv2.zip"
       

  - name: Install AWS SSM Plugin
    become: yes
    dnf:
      name: https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm
      state: present
      disable_gpg_check: true
       
  - name: Install OneDriveGui
    shell: |
       wget https://api.github.com/repos/bpozdena/OneDriveGUI/releases/latest -O - | awk -F \" -v RS="," '/browser_download_url/ {print $(NF-1)}' | xargs wget
       find . -type f -name "*.AppImage" -exec ail-cli integrate {} \; 
   # args:
        #chdir: "{{ tmp_folder }}"

  - name: Install Serverless Framework
    become: yes
    shell: |
        curl -o- -L https://slss.io/install | bash

  - name: Cleaing temp folder
    become: yes
    shell: |
        cd "{{ tmp_folder }}"
        rm -rf ./*.*
        
       
  

